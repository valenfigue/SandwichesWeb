# Generated by Django 3.1.5 on 2021-02-02 03:42

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Addition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Adicional',
                'verbose_name_plural': 'Adicionales',
                'db_table': 'sw_addition',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='fecha y hora de compra')),
                ('total', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='total de la compra')),
                ('ci_client', models.IntegerField(help_text='Por favor, solo ingrese el valor numérico de su número de identificación.', verbose_name='número de identificación del cliente')),
                ('first_name_client', models.CharField(max_length=30, verbose_name='primer nombre del cliente')),
                ('middle_name_client', models.CharField(max_length=30, null=True, verbose_name='segundo nombre del cliente')),
                ('surname_client', models.CharField(max_length=30, verbose_name='primer apellido del cliente')),
                ('second_surname_client', models.CharField(max_length=30, null=True, verbose_name='segundo apellido del cliente')),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas',
                'db_table': 'sw_bill',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Combo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='precio')),
                ('photo', models.ImageField(null=True, upload_to='uploads/', verbose_name='foto del producto')),
                ('name', models.CharField(help_text="evite usar la palabra 'combo' para dar un nombre. (Ej. 'Chamito').", max_length=30, verbose_name='nombre del combo')),
            ],
            options={
                'verbose_name': 'Combo',
                'verbose_name_plural': 'Combos',
                'db_table': 'sw_combo',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Drink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='precio')),
                ('photo', models.ImageField(null=True, upload_to='uploads/', verbose_name='foto del producto')),
                ('name', models.CharField(max_length=30, verbose_name='bebida')),
                ('drink_type', models.CharField(choices=[('Refresco', 'Refresco'), ('Jugo', 'Jugo'), ('Café', 'Café'), ('Agua', 'Agua')], default='Refresco', max_length=30, verbose_name='tipo de bebida')),
            ],
            options={
                'verbose_name': 'Bebida',
                'verbose_name_plural': 'Bebidas',
                'db_table': 'sw_drink',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=30, verbose_name='nombre')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='precio')),
            ],
            options={
                'verbose_name': 'Ingrediente',
                'verbose_name_plural': 'Ingredientes',
                'db_table': 'sw_ingredient',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('number', models.IntegerField(default=1, verbose_name='número del pedido')),
                ('sub_total', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='sub total')),
                ('combo', models.ForeignKey(limit_choices_to={'is_activated': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.combo')),
                ('drink', models.ForeignKey(limit_choices_to={'is_activated': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.drink')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'db_table': 'sw_order',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='fecha y hora de compra')),
                ('total', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='total de la compra')),
            ],
            options={
                'verbose_name': 'Compra',
                'verbose_name_plural': 'Compras',
                'db_table': 'sw_purchase',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleProm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('start_hour', models.TimeField(verbose_name='hora en el que inicia la oferta')),
                ('end_hour', models.TimeField(verbose_name='hora en el que termina la oferta')),
                ('monday', models.BooleanField(default=False, verbose_name='lunes')),
                ('tuesday', models.BooleanField(default=False, verbose_name='martes')),
                ('wednesday', models.BooleanField(default=False, verbose_name='miércoles')),
                ('thursday', models.BooleanField(default=False, verbose_name='jueves')),
                ('friday', models.BooleanField(default=False, verbose_name='viernes')),
                ('saturday', models.BooleanField(default=False, verbose_name='sábado')),
                ('sunday', models.BooleanField(default=False, verbose_name='domingo')),
            ],
            options={
                'verbose_name': 'Horario',
                'verbose_name_plural': 'Horarios',
                'db_table': 'sw_schedule_prom',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SideDish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='precio')),
                ('photo', models.ImageField(null=True, upload_to='uploads/', verbose_name='foto del producto')),
                ('name', models.CharField(max_length=30, verbose_name='nombre')),
            ],
            options={
                'verbose_name': 'Acompañante',
                'verbose_name_plural': 'Acompañantes',
                'db_table': 'sw_side_dish',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sandwich',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='precio')),
                ('photo', models.ImageField(null=True, upload_to='uploads/', verbose_name='foto del producto')),
                ('size', models.CharField(max_length=30, verbose_name='tamaño del sándwich')),
                ('ingredients', models.ManyToManyField(through='sandwichesweb.Addition', to='sandwichesweb.Ingredient')),
            ],
            options={
                'verbose_name': 'Sándwich',
                'verbose_name_plural': 'Sándwiches',
                'db_table': 'sw_sandwich',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuantityOfProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('product', models.CharField(choices=[('Sándwich', 'Sándwich'), ('Bebida', 'Bebida'), ('Acompañante', 'Acompañante'), ('Combo', 'Combo')], default='Sándwich', max_length=30, verbose_name='tipo de producto')),
                ('quantity', models.IntegerField(default=0, verbose_name='cantidad de este tipo de producto')),
                ('bill', models.ForeignKey(limit_choices_to={'is_activated': True}, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.bill')),
            ],
            options={
                'verbose_name': 'Cantidad de productos comprados',
                'verbose_name_plural': 'Cantidad de productos comprados',
                'db_table': 'sw_quantity_of_products',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=48, verbose_name='nombre de la oferta')),
                ('description', models.CharField(max_length=100, null=True, verbose_name='descripción de la oferta')),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='fecha en que inicia la oferta')),
                ('end_date', models.DateField(null=True, verbose_name='fecha en que termina la oferta')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='descuento de la oferta')),
                ('schedule', models.ForeignKey(limit_choices_to={'is_activated': True}, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.scheduleprom')),
            ],
            options={
                'verbose_name': 'Oferta',
                'verbose_name_plural': 'Ofertas',
                'db_table': 'sw_promotion',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PromApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('order', models.ForeignKey(limit_choices_to={'is_activated': True}, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.order')),
                ('promotion', models.ForeignKey(limit_choices_to={'is_activated': True}, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.promotion')),
            ],
            options={
                'verbose_name': 'aplicación de oferta',
                'verbose_name_plural': 'aplicaciones de oferta',
                'db_table': 'sw_prom_application',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductsInCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('combo', models.ForeignKey(limit_choices_to={'is_activated': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.combo')),
                ('drink', models.ForeignKey(limit_choices_to={'is_activated': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.drink')),
                ('sandwich', models.ForeignKey(limit_choices_to={'is_activated': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.sandwich')),
                ('side_dish', models.ForeignKey(limit_choices_to={'is_activated': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.sidedish')),
            ],
            options={
                'verbose_name': 'Productos en combo',
                'verbose_name_plural': 'Productos en combo',
                'db_table': 'sw_products_in_combo',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='order',
            name='purchase',
            field=models.ForeignKey(limit_choices_to={'is_activated': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.purchase'),
        ),
        migrations.AddField(
            model_name='order',
            name='sandwich',
            field=models.ForeignKey(limit_choices_to={'is_activated': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sándwich', related_query_name='sandwich', to='sandwichesweb.sandwich'),
        ),
        migrations.AddField(
            model_name='order',
            name='side_dish',
            field=models.ForeignKey(limit_choices_to={'is_activated': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.sidedish'),
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                ('product', models.CharField(choices=[('Sándwich', 'Sándwich'), ('Bebida', 'Bebida'), ('Acompañante', 'Acompañante'), ('Combo', 'Combo')], default='Sándwich', max_length=30, verbose_name='tipo de producto')),
                ('size', models.CharField(max_length=30, null=True, verbose_name='tamaño del producto')),
                ('ingredients', models.CharField(max_length=100, null=True, verbose_name='ingredientes del sándwich')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='precio del producto')),
                ('bill', models.ForeignKey(limit_choices_to={'is_activated': True}, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.bill')),
            ],
            options={
                'verbose_name': 'Detalle de factura',
                'verbose_name_plural': 'Detalles de factura',
                'db_table': 'sw_detail',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='combo',
            name='drinks',
            field=models.ManyToManyField(through='sandwichesweb.ProductsInCombo', to='sandwichesweb.Drink'),
        ),
        migrations.AddField(
            model_name='combo',
            name='sandwiches',
            field=models.ManyToManyField(through='sandwichesweb.ProductsInCombo', to='sandwichesweb.Sandwich'),
        ),
        migrations.AddField(
            model_name='combo',
            name='side_dishes',
            field=models.ManyToManyField(through='sandwichesweb.ProductsInCombo', to='sandwichesweb.SideDish'),
        ),
        migrations.AddField(
            model_name='bill',
            name='purchase',
            field=models.OneToOneField(limit_choices_to={'is_activated': True}, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.purchase'),
        ),
        migrations.AddField(
            model_name='addition',
            name='ingredient',
            field=models.ForeignKey(limit_choices_to={'is_activated': True}, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.ingredient'),
        ),
        migrations.AddField(
            model_name='addition',
            name='sandwich',
            field=models.ForeignKey(limit_choices_to={'is_activated': True}, on_delete=django.db.models.deletion.CASCADE, to='sandwichesweb.sandwich'),
        ),
    ]
